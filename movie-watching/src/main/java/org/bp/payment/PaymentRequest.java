/*
 * OpenAPI definition
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.bp.payment;

import com.google.gson.annotations.SerializedName;


import java.util.Objects;

/**
 * PaymentRequest
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-01-20T19:20:01.153+01:00[Europe/Belgrade]")
public class PaymentRequest {
    @SerializedName("paymentCard")
    private PaymentCard paymentCard = null;

    @SerializedName("amount")
    private Integer amount = null;

    @SerializedName("watchingId")
    private String watchingId = null;

    @SerializedName("movieBookingId")
    private Integer movieBookingId = null;

    @SerializedName("accountsubscribingId")
    private Integer accountsubscribingId = null;

    public PaymentRequest paymentCard(PaymentCard paymentCard) {
        this.paymentCard = paymentCard;
        return this;
    }

    /**
     * Get paymentCard
     *
     * @return paymentCard
     **/

    public PaymentCard getPaymentCard() {
        return paymentCard;
    }

    public void setPaymentCard(PaymentCard paymentCard) {
        this.paymentCard = paymentCard;
    }

    public PaymentRequest amount(Integer amount) {
        this.amount = amount;
        return this;
    }

    /**
     * Get amount
     *
     * @return amount
     **/

    public Integer getAmount() {
        return amount;
    }

    public void setAmount(Integer amount) {
        this.amount = amount;
    }

    public PaymentRequest watchingId(String watchingId) {
        this.watchingId = watchingId;
        return this;
    }

    /**
     * Get watchingId
     *
     * @return watchingId
     **/

    public String getWatchingId() {
        return watchingId;
    }

    public void setWatchingId(String watchingId) {
        this.watchingId = watchingId;
    }

    public PaymentRequest movieBookingId(Integer movieBookingId) {
        this.movieBookingId = movieBookingId;
        return this;
    }

    /**
     * Get movieBookingId
     *
     * @return movieBookingId
     **/

    public Integer getMovieBookingId() {
        return movieBookingId;
    }

    public void setMovieBookingId(Integer movieBookingId) {
        this.movieBookingId = movieBookingId;
    }

    public PaymentRequest accountsubscribingId(Integer accountsubscribingId) {
        this.accountsubscribingId = accountsubscribingId;
        return this;
    }

    /**
     * Get accountsubscribingId
     *
     * @return accountsubscribingId
     **/

    public Integer getAccountsubscribingId() {
        return accountsubscribingId;
    }

    public void setAccountsubscribingId(Integer accountsubscribingId) {
        this.accountsubscribingId = accountsubscribingId;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PaymentRequest paymentRequest = (PaymentRequest) o;
        return Objects.equals(this.paymentCard, paymentRequest.paymentCard) &&
                Objects.equals(this.amount, paymentRequest.amount) &&
                Objects.equals(this.watchingId, paymentRequest.watchingId) &&
                Objects.equals(this.movieBookingId, paymentRequest.movieBookingId) &&
                Objects.equals(this.accountsubscribingId, paymentRequest.accountsubscribingId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(paymentCard, amount, watchingId, movieBookingId, accountsubscribingId);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class PaymentRequest {\n");

        sb.append("    paymentCard: ").append(toIndentedString(paymentCard)).append("\n");
        sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
        sb.append("    watchingId: ").append(toIndentedString(watchingId)).append("\n");
        sb.append("    movieBookingId: ").append(toIndentedString(movieBookingId)).append("\n");
        sb.append("    accountsubscribingId: ").append(toIndentedString(accountsubscribingId)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
